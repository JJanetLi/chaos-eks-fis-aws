---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalog-service
  namespace: ecommerce-app
  labels:
    app: catalog-service
  annotations:
    litmuschaos.io/chaos: 'true'
spec:
  selector:
    matchLabels:
      app: catalog-service
  template:
    metadata:
      labels:
        app: catalog-service
        sidecar.istio.io/inject: 'true'
      annotations:
        prometheus.io/scrape: 'true'
        litmuschaos.io/chaos: 'true'
    spec:
      nodeSelector:
        node_type: workload
      containers:
        - name: catalog-service
          image: {{ .Values.catalog_service.image }}
          imagePullPolicy: Always
          env:
            - name: DB_URI
              value: {{ .Values.common.db_uri }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8000
            initialDelaySeconds: 1
            periodSeconds: 10
          resources:
            requests:
              cpu: "500m"
              memory: "50Mi"
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: catalog-service
  namespace: ecommerce-app
  labels:
    app: catalog-service
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8000
  selector:
    app: catalog-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cart-service
  namespace: ecommerce-app
  labels:
    app: cart-service
  annotations:
    litmuschaos.io/chaos: 'true'
spec:
  selector:
    matchLabels:
      app: cart-service
  template:
    metadata:
      labels:
        app: cart-service
        sidecar.istio.io/inject: 'true'
      annotations:
        prometheus.io/scrape: 'true'
        litmuschaos.io/chaos: 'true'
    spec:
      nodeSelector:
        node_type: workload
      containers:
        - name: cart-service
          image: {{ .Values.cart_service.image }}
          env:
            - name: REDIS_HOST
              value: {{ .Values.common.redis_host }}
            - name: REDIS_PORT
              value: "{{ .Values.common.redis_port }}"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8000
            initialDelaySeconds: 1
            periodSeconds: 10
          resources:
            requests:
              cpu: "500m"
              memory: "50Mi"
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: cart-service
  namespace: ecommerce-app
  labels:
    app: cart-service
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8000
  selector:
    app: cart-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  namespace: ecommerce-app
  labels:
    app: order-service
    sidecar.istio.io/inject: 'true'
  annotations:
    litmuschaos.io/chaos: 'true'
spec:
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
      annotations:
        prometheus.io/scrape: 'true'
        litmuschaos.io/chaos: 'true'
    spec:
      nodeSelector:
        node_type: workload
      containers:
        - name: order-service
          image: {{ .Values.order_service.image }}
          imagePullPolicy: Always
          env:
            - name: DB_URI
              value: {{ .Values.common.db_uri }}
            - name: CART_SERVICE_URL
              value: {{ .Values.common.cart_service_url }}
            - name: PRODUCT_SERVICE_URL
              value: {{ .Values.common.catalog_service_url }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8000
            initialDelaySeconds: 1
            periodSeconds: 10
          resources:
            requests:
              cpu: "500m"
              memory: "50Mi"
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: order-service
  namespace: ecommerce-app
  labels:
    app: order-service
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8000
  selector:
    app: order-service